
#Область ПрограммныйИнтерфейс

// Возвращает структуру массива видов схем интеграции.
// 
// Возвращаемое значение:
//  Массив из структура - структура массива видов схем интеграции 
//
Функция ПолучитьВидыСхемИнтеграции() Экспорт

	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Axapta_ВидыСхемИнтеграции.Ссылка КАК Ссылка,
	|	Axapta_ВидыСхемИнтеграции.Код КАК code,
	|	Axapta_ВидыСхемИнтеграции.Наименование КАК name
	|ИЗ
	|	Справочник.Axapta_ВидыСхемИнтеграции КАК Axapta_ВидыСхемИнтеграции
	|ГДЕ
	|	Axapta_ВидыСхемИнтеграции.ПометкаУдаления = ЛОЖЬ
	|");
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивВидовСхем = Новый Массив();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураЭлемента = Новый Структура("code, name, schemes", );
		ЗаполнитьЗначенияСвойств(СтруктураЭлемента, Выборка);
		
		МассивСхем = Новый Массив;
		
		Для Каждого СтрокаОбработчика Из Выборка.Ссылка.Обработчики Цикл
			
			ОписаниеОбработчика = ПолучитьОписаниеОбработчикаHTTP(СтрокаОбработчика.ИмяОбработчика);
			МассивСхем.Добавить(ОписаниеОбработчика);
			
		КонецЦикла;	
		
		СтруктураЭлемента.schemes = МассивСхем;
		МассивВидовСхем.Добавить(СтруктураЭлемента);
		
	КонецЦикла;	
	
	СтруктураУровня_typesSchemes = Новый Структура("typesSchemes", МассивВидовСхем);
	
	Возврат СтруктураУровня_typesSchemes;
	
КонецФункции

// Получить обработчики видов схем.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица значений(ИмяОбработчика, СинонимОбработчика) 
//
Функция ПолучитьОбработчикиВидовСхем() Экспорт
	
	Обработчики = Новый ТаблицаЗначений();
	Обработчики.Колонки.Добавить("ИмяОбработчика");
	Обработчики.Колонки.Добавить("СинонимОбработчика");
	
	Для Каждого Обработчик Из Метаданные.Обработки Цикл
		
		Если СтрЧислоВхождений(Обработчик.Имя, "Axapta_Обработчик") = 0 Тогда
			Продолжить;
		КонецЕсли;	 
		
		НоваяСтрока = Обработчики.Добавить();
		НоваяСтрока.ИмяОбработчика = Обработчик.Имя;
		НоваяСтрока.СинонимОбработчика = Обработчик.Синоним;

	КонецЦикла;	
	
	Возврат Обработчики;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


// Получить описание обработчика HTTP.
// 
// Параметры:
//  ИмяОбработчика - Строка - Имя обработчика
// 
// Возвращаемое значение:
//  Структура -  Получить описание обработчика HTTP:
// * name - Строка 
// * synonym - Строка
// * comment - Строка
// * parameters - Массив из структура - массив из структуры параметра
//
Функция ПолучитьОписаниеОбработчикаHTTP(ИмяОбработчика) Экспорт
	
	Обработчик = Метаданные.Обработки[ИмяОбработчика];
	Параметры = Новый Массив;
	
	СтруктураСвойств = Новый Структура();
	СтруктураСвойств.Вставить("name", ИмяОбработчика);
	СтруктураСвойств.Вставить("synonym", Обработчик.Синоним);
	СтруктураСвойств.Вставить("comment", Обработчик.Комментарий);
	СтруктураСвойств.Вставить("parameters", Параметры);
	
	Для Индекс = 0 По Обработчик.Реквизиты.Количество() - 1 Цикл
		
		ТекущийПараметр = Обработчик.Реквизиты[Индекс];
		МассивТипов = ТекущийПараметр.Тип.Типы();
		МассивТиповСтрокой = Новый Массив;
		
		Для Каждого ТекущийТип Из МассивТипов Цикл
			
			// Метод не работает с объектами из расширений
			//ТипСтрокой = ОбщегоНазначения.СтроковоеПредставлениеТипа(ТекущийТип);
			
			ТипСтрокой = Axapta_ОбщегоНазначения.СтроковоеПредставлениеТипа(ТекущийТип);
			МассивТиповСтрокой.Добавить(ТипСтрокой);
			
		КонецЦикла;	

		СтруктураПараметра = Новый Структура();
		СтруктураПараметра.Вставить("name", ТекущийПараметр.Имя);	
		СтруктураПараметра.Вставить("synonym", ТекущийПараметр.Синоним);
		СтруктураПараметра.Вставить("types", МассивТиповСтрокой);									
		
		Параметры.Добавить(СтруктураПараметра);
		
	КонецЦикла;	
	
	Возврат СтруктураСвойств;
	
КонецФункции

#КонецОбласти